package com.model.entities;
//Generated 30 ene. 2020 8:50:01 by Hibernate Tools 5.2.12.Final


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
* Invoice generated by hbm2java
*/
@Entity
@Table(name = "invoice", catalog = "7057507_administration_db")
public class Invoice implements java.io.Serializable {

	private Integer id;
	private Company company;
	private Customer customer;
	private PayMethod payMethod;
	private Tax tax;
	private String invoiceNumber;
	private Date invoiceDate;
	private Integer status;
	private Integer conceptId;
	private Double price;
	private Double taxTotal;
	private Double priceTaxesIncluded;
	private List<ConceptInvoice> conceptInvoices = new ArrayList<ConceptInvoice>(0);
	private List<InvoiceDetail> invoiceDetails = new ArrayList<InvoiceDetail>(0);
	


	public Invoice() {
	}

		
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {			
			this.id = id;		
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {		
			this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {		
			this.customer = customer;			
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pay_method_id")
	public PayMethod getPayMethod() {
		return this.payMethod;
	}


	
	public void setPayMethod(PayMethod payMethod) {		
			this.payMethod = payMethod;				
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tax_id")
	public Tax getTax() {
		return this.tax;
	}

	public void setTax(Tax tax) {		
			this.tax = tax;			
	}

	@Column(name = "invoice_number")
	public String getInvoiceNumber() {
		return this.invoiceNumber;
	}

	public void setInvoiceNumber(String invoiceNumber) {		
			this.invoiceNumber = invoiceNumber;			
	}

	
	
	@Temporal(TemporalType.DATE)
	@Column(name = "invoice_date", length = 10)
	public Date getInvoiceDate() {
		return this.invoiceDate;
	}

	public void setInvoiceDate(Date invoiceDate) {		
			this.invoiceDate = invoiceDate;				
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {	
			this.status = status;			
	}
	
	

	@Column(name = "concept_id")
	public Integer getConceptId() {
		return this.conceptId;
	}

	public void setConceptId(Integer conceptId) {		
			this.conceptId = conceptId;				
	}

	@Column(name = "price", precision = 22, scale = 0)
	public Double getPrice() {
		return this.price;
	}

	public void setPrice(Double price) {		
			this.price = price;
	}

	@Column(name = "tax_total", precision = 22, scale = 0)
	public Double getTaxTotal() {
		return this.taxTotal;
	}

	public void setTaxTotal(Double taxTotal) {	
			this.taxTotal = taxTotal;
	}
	
	
	

	@Column(name = "price_taxes_included", precision = 22, scale = 0)
	public Double getPriceTaxesIncluded() {
		return this.priceTaxesIncluded;
	}

	public void setPriceTaxesIncluded(Double priceTaxesIncluded) {		
			this.priceTaxesIncluded = priceTaxesIncluded;	
		
	}
	


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoice", cascade = CascadeType.ALL)
	public List<ConceptInvoice> getConceptInvoices() {
		return this.conceptInvoices;
	}

	public void setConceptInvoices(List<ConceptInvoice> conceptInvoices) {		
			this.conceptInvoices = conceptInvoices;
	}
	
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoice", cascade = CascadeType.ALL)
	public List<InvoiceDetail> getInvoiceDetails() {
		return this.invoiceDetails;
	}
		

	public void setInvoiceDetails(List<InvoiceDetail> invoiceDetails) {	
			this.invoiceDetails = invoiceDetails;				
	}
	
	
		

}