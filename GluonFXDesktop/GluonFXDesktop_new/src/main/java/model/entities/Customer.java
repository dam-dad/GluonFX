package model.entities;
// Generated 30 ene. 2020 8:50:01 by Hibernate Tools 5.2.12.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import javafx.beans.property.IntegerProperty;
import javafx.beans.property.ListProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleListProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javafx.collections.FXCollections;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "7057507_administration_db")
public class Customer implements java.io.Serializable {

	private Integer id;
	private String customerId;
	private String name;
	private String address;
	private String city;
	private String country;
	private String email;
	private String phone;
	private List<Invoice> invoices = new ArrayList<Invoice>(0);
	private List<Budget> budgets = new ArrayList<Budget>(0);
	private List<WorkOrder> workOrders = new ArrayList<WorkOrder>(0);
	
	private IntegerProperty id_prop = new SimpleIntegerProperty(); 
	private StringProperty customerId_prop = new SimpleStringProperty();
	private StringProperty name_prop = new SimpleStringProperty();
	private StringProperty address_prop = new SimpleStringProperty();
	private StringProperty city_prop = new SimpleStringProperty();
	private StringProperty country_prop = new SimpleStringProperty();
	private StringProperty email_prop = new SimpleStringProperty();
	private StringProperty phone_prop = new SimpleStringProperty();
	private ListProperty<Invoice> invoices_prop = new SimpleListProperty<>();  
	private ListProperty<Budget> budgets_prop = new SimpleListProperty<>(); 
	private ListProperty<WorkOrder> workOrders_prop = new SimpleListProperty<>(); 

	public Customer() {
		
		try {name_prop.set(name);} catch (Exception e) {}
				
	}
	
	

	
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
		this.id_prop.set(id);
	}

	@Column(name = "customer_id")
	public String getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(String customerId) {
		this.customerId = customerId;
		this.customerId_prop.set(customerId);
	}

	@Column(name = "name", length = 500)
	public String getName() {
		this.name_prop.set(name);
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
		this.name_prop.set(name);
	}

	@Column(name = "address", length = 500)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
		this.address_prop.set(address);
	}

	@Column(name = "city")
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
		this.city_prop.set(city);
	}

	@Column(name = "country")
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
		this.country_prop.set(country);
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
		this.email_prop.set(email);
	}

	@Column(name = "phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
		this.phone_prop.set(phone);
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public List<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(List<Invoice> invoices) {
		this.invoices = invoices;
		this.invoices_prop.set(FXCollections.observableArrayList(invoices));
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public List<Budget> getBudgets() {
		return this.budgets;
	}

	public void setBudgets(List<Budget> budgets) {
		this.budgets = budgets;
		this.budgets_prop.set(FXCollections.observableArrayList(budgets));
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public List<WorkOrder> getWorkOrders() {
		return this.workOrders;
	}

	public void setWorkOrders(List<WorkOrder> workOrders) {
		this.workOrders = workOrders;
		this.workOrders_prop.set(FXCollections.observableArrayList(workOrders));
	}

	
	//JavaFX Properties
	

	public final IntegerProperty id_propProperty() {
		return this.id_prop;
	}
	


	public final StringProperty customerId_propProperty() {
		return this.customerId_prop;
	}
	


	public final StringProperty name_propProperty() {
		return this.name_prop;
	}
	

	public final StringProperty address_propProperty() {
		return this.address_prop;
	}
	


	public final StringProperty city_propProperty() {
		return this.city_prop;
	}
	

	public final StringProperty country_propProperty() {
		return this.country_prop;
	}
	


	public final StringProperty email_propProperty() {
		return this.email_prop;
	}
	


	public final StringProperty phone_propProperty() {
		return this.phone_prop;
	}
	


	public final ListProperty<Invoice> invoices_propProperty() {
		return this.invoices_prop;
	}
	


	public final ListProperty<Budget> budgets_propProperty() {
		return this.budgets_prop;
	}
	

	
	public final ListProperty<WorkOrder> workOrders_propProperty() {
		return this.workOrders_prop;
	}
	

	@Override
	public String toString() {
		return getName();
		
	}
	
}
